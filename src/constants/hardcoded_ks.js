const hardcoded_ks = {
	onRender: `public action render(num delta){
	obj SCREENFRAME = GAME.UI.getSize();
	if ((num) SCREEN.width != (num) SCREENFRAME.width || (num) SCREEN.height != (num) SCREENFRAME.height){
		GAME.UI.updateDIV("uiBase", "transform", "");
		GAME.UI.updateDIV("uiBase", "width", "");
		GAME.UI.updateDIV("uiBase", "height", "");
	}
}
`,
	onStart: `GAME.UI.updateDIV("uiBase", "transform", "");
	GAME.UI.updateDIV("uiBase", "width", "");
	GAME.UI.updateDIV("uiBase", "height", "");

	GAME.DEFAULT.disablePrediction();
	GAME.DEFAULT.disablePlayerBehaviour();
	GAME.DEFAULT.disable3D();

	GAME.UI.updateDIV("customGUIHolder", "display", "block");
	GAME.UI.updateDIV("gameUI", "textAlign", "left");
	GAME.UI.hideCrosshair();

	GAME.INPUTS.disableDefault();
	GAME.PLAYERS.disableMeshes();
	GAME.SETTINGS.set("ambientVolume", "0");
	GAME.SETTINGS.set("voiceVolume", "0");
	GAME.SETTINGS.set("uiVolume", "0");
	GAME.SETTINGS.set("skinVolume", "0");
	GAME.SETTINGS.set("playerVolume", "0");
	GAME.SETTINGS.set("dialogueVolume", "0");

	GAME.UI.addDIV("SOTT_BODY_CANVAS", true, "position: absolute; height: 100%; width: 100%; overflow: auto; z-index: 2147483646; background-color: white;");
	GAME.UI.addDIV("SOTT_BODY", true, "display: block; position: relative;", "SOTT_BODY_CANVAS");

	GAME.log("[SOTT KRDom] Website succesfully loaded!");
`,
	server: `#Generated by Swat's SOTT_HTMLTKSC

public action start(){
	GAME.DEFAULT.disablePlayerBehaviour();
	GAME.DEFAULT.disableServerSync();
}
`,
	client: function(onStart, onRender){return `#Generated by Swat's SOTT_HTMLTKSC

obj SCREEN = GAME.UI.getSize();

public action start(){
	${onStart}
}

${onRender}
`}
}

export default hardcoded_ks;